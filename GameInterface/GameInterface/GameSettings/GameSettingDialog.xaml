<Window x:Class="GameInterface.GameSettings.GameSettingDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GameInterface.GameSettings"
        xmlns:conv="clr-namespace:GameInterface.ValueConvertes"
        mc:Ignorable="d"
        Title="ゲーム設定" Height="540" Width="590" MinWidth="590" MinHeight="540">
    <Window.Resources>
        <ResourceDictionary Source="Styles.xaml"/>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.Resources>
            <conv:BooleanNotConverter x:Key="BooleanNotConverter"/>
            <conv:VisibilityBooleanConverter x:Key="VisibilityBooleanConverter"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Text="ゲーム設定" FontSize="42" Grid.ColumnSpan="4"/>
        <TextBlock Text="ターン数" Grid.Row="1" Margin="0,4,4,4" HorizontalAlignment="Right" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>
        <TextBox Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding Turns}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>
        <TextBlock Text="ターン時間[ms]" Grid.Row="1" Grid.Column="3" Margin="0,4,4,4" HorizontalAlignment="Right" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>
        <TextBox Grid.Row="1" Grid.Column="4" Margin="2" Text="{Binding LimitTime}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>
        <CheckBox Content="自動ターンエンド" Grid.Row="2" Grid.Column="1" IsChecked="{Binding IsAutoSkip}" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>
        <CheckBox Content="自動で次のゲームへ" Grid.Row="2" Grid.Column="4" IsChecked="{Binding IsAutoGoNextGame}" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>

        <TextBlock Text="フィールド設定" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="4" FontSize="24"/>
        <TabControl Grid.Row="5" Grid.ColumnSpan="5" Margin="5" SelectedIndex="{Binding _BoardCreationState}">
            <TabItem Header="乱数によって生成">
                <Grid Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="幅" Grid.Row="0" Grid.Column="0" Margin="4" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="2,2,42,2" Text="{Binding BoardWidth}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}"/>
                    <Button Content="ランダム" x:Name="WidthBox_RandomButton" Grid.Row="0" Grid.Column="1" Margin="2" HorizontalAlignment="Right" Click="WidthBox_RandomButton_Click"/>
                    <TextBlock Text="高さ" Grid.Row="0" Grid.Column="3" Margin="4" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="0" Grid.Column="4" Margin="2,2,42,2" Text="{Binding BoardHeight}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}"/>
                    <Button Content="ランダム" x:Name="HeightBox_RandomButton" Grid.Row="0" Grid.Column="4" Margin="2" HorizontalAlignment="Right" Click="HeightBox_RandomButton_Click"/>
                    <TextBlock Text="エージェント数" Grid.Row="1" Grid.Column="0" Margin="4" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="2,2,42,2" Text="{Binding AgentsCount}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}"/>
                    <Button Content="ランダム" x:Name="AgentBox_RandomButton" Grid.Row="1" Grid.Column="1" Margin="2" HorizontalAlignment="Right" Click="AgentBox_RandomButton_Click"/>
                    <StackPanel Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="CheckBox">
                                <Setter Property="Margin" Value="10,0,0,0"/>
                            </Style>
                        </StackPanel.Resources>
                        <CheckBox Content="X軸線対称" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding IsCreateX}"/>
                        <CheckBox Content="Y軸線対称" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding IsCreateY}"/>
                        <CheckBox Content="点対称" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding IsCreateRotate}"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="サーバに接続">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="エンドポイント" Grid.Row="0" Grid.Column="0" Margin="4" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="2,2,2,2" Text="{Binding EndPoint}"/>
                    <TextBlock Text="トークン" Grid.Row="1" Grid.Column="0" Margin="4" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="2,2,55,2" Text="{Binding ServerToken}"/>
                    <Button Grid.Row="1" Grid.Column="1" Margin="2,2,2,2" HorizontalAlignment="Right" Content="試合取得" Click="GetBattles"/>
                    <TextBlock Text="試合ID" Grid.Row="2" Grid.Column="0" Margin="4" HorizontalAlignment="Right"/>
                    <ComboBox Grid.Row="2" Grid.Column="1" Margin="2" ItemsSource="{Binding Matches}" SelectedIndex="{Binding SelectedMatchIndex}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Teams[1].Name}" Margin="2" Background="Black" Foreground="White"/>
                                    <TextBlock Text="{Binding Id}" Margin="2"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </TabItem>
        </TabControl>

        <CheckBox x:Name="SameAICheckBox" Content="同じAIでプレイする（1P設定，2P設定は変更されません)" Margin="10" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5" IsChecked="{Binding IsUseSameAI}" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>

        <Grid Grid.Row="8" Grid.ColumnSpan="5" IsEnabled="{Binding IsChecked, ElementName=SameAICheckBox, Converter={StaticResource BooleanNotConverter}, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="1P設定" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="4" FontSize="24"/>
            <TextBlock Text="2P設定" Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2" Margin="4" FontSize="24" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}"/>
            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Height="30" Margin="3">
                <Grid.Resources>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton} }">
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <RadioButton x:Name="P1UserToggle" Content="ユーザ" IsChecked="true" Checked="P1UserToggle_Checked"/>
                <RadioButton x:Name="P1AIToggle" Content="AI" Grid.Column="1" Checked="P1AIToggle_Checked"/>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Height="30" Margin="3" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource VisibilityBooleanConverter}}">
                <Grid.Resources>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton} }">
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <RadioButton x:Name="P2UserToggle" Content="ユーザ" IsChecked="true" Checked="P2UserToggle_Checked"/>
                <RadioButton x:Name="P2AIToggle" Content="AI" Grid.Column="1" Checked="P2AIToggle_Checked"/>
            </Grid>

            <TextBlock Text="ポート番号" Grid.Row="2" Grid.Column="0" Margin="0,4,3,4" HorizontalAlignment="Right"/>
            <TextBox x:Name="P1PortBox" Grid.Row="2" Grid.Column="1" Margin="2" IsEnabled="{Binding ElementName=P1AIToggle, Path=IsChecked}" Text="15000" TextChanged="P1PortBox_TextChanged"/>
            <TextBlock Text="ポート番号" Grid.Row="2" Grid.Column="3" Margin="0,4,3,4" HorizontalAlignment="Right" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource BooleanNotConverter}}"/>
            <TextBox x:Name="P2PortBox" Grid.Row="2" Grid.Column="4" Margin="2" IsEnabled="{Binding ElementName=P2AIToggle, Path=IsChecked}" Text="15001" TextChanged="P2PortBox_TextChanged" Visibility="{Binding IsEnableGameConduct, Converter={StaticResource BooleanNotConverter}}"/>
            <TextBlock x:Name="P1PortBoxErrorMessage" Visibility="Collapsed" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Foreground="Red" Margin="0,0,0,93"/>
            <TextBlock x:Name="P2PortBoxErrorMessage" Visibility="Collapsed" Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" Foreground="Red" Margin="0,0,0,93"/>
        </Grid>

        <Button x:Name="OkButton" Grid.Row="11" Grid.Column="4" Content="OK" Margin="0,0,5,5" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="30" Width="80" Click="OkButton_Click" Grid.RowSpan="2"/>
    </Grid>
</Window>
